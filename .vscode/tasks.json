{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "requirements.txt",
      "type": "shell",
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "pip",
        "install",
        "-r",
        "requirements.txt",
        "--upgrade"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "install_pyinstaller",
      "type": "shell",
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "pip",
        "install",
        "pyinstaller",
        "--upgrade"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "install_shiv",
      "type": "shell",
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "pip",
        "install",
        "shiv",
        "--upgrade"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "install_nuitka",
      "type": "shell",
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "pip",
        "install",
        "nuitka",
        "--upgrade"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "install_pylint",
      "type": "shell",
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "pip",
        "install",
        "pylint",
        "--upgrade"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "install_ruff",
      "type": "shell",
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "pip",
        "install",
        "ruff",
        "--upgrade"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "install_mypy",
      "type": "shell",
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "pip",
        "install",
        "mypy",
        "--upgrade"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "label": "pylint: whole project",
      "dependsOn": ["requirements.txt", "install_pylint"],
      "type": "shell",
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "pylint",
        "--msg-template",
        "\"{path}:{line}:{column}:{category}:{symbol} - {msg}\"",
        "${workspaceFolder}",
      ],
      "presentation": {
        "reveal": "never",
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "python",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^(.+):(\\d+):(\\d+):(\\w+):(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "Python: lint entire project with mypy",
      "dependsOn": ["requirements.txt", "install_mypy"],
      "type": "shell",
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "mypy",
        "--no-pretty",
        "--show-column-numbers",
        "--package",
        "pykotor",
        "--check-untyped-defs",
        "--no-strict-optional"
      ],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": {
        "owner": "python",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^(.+):(\\d+):(\\d+): (\\w+): (.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "Python: Ruff check entire project",
      "type": "shell",
      "dependsOn": ["requirements.txt", "install_ruff"],
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "ruff",
        "check",
        ".",
        "--ignore=D101,D102,D103,D107,D205,D417,D205,PLR5501,PLW2901"
      ],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": {
        "owner": "python",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^(.+):(\\d+):(\\d+): (\\w+): (.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "Build HoloPatcher - PyInstaller",
      "type": "shell",
      "dependsOn": ["requirements.txt", "install_pyinstaller"],
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "PyInstaller",
        "--noconsole",
        "--onefile",
        "--clean",
        "--name=HoloPatcher",
        "--icon=resources${pathSeparator}icons${pathSeparator}patcher_icon_v2.png",
        "scripts${pathSeparator}holopatcher${pathSeparator}__main__.py"
      ],
      "problemMatcher": []
    },
    {
      "label": "Build HoloPatcher - Nuitka",
      "type": "shell",
      "dependsOn": ["requirements.txt", "install_nuitka"],
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "nuitka",
        "--onefile",
        "--windows-icon-from-ico=resources${pathSeparator}icons${pathSeparator}patcher_icon_v2.ico",
        "--output-dir=${workspaceFolder}${pathSeparator}nuitka_dist",
        "scripts${pathSeparator}holopatcher${pathSeparator}__main__.py",
        "--enable-plugin=tk-inter",
        "--output-filename=HoloPatcher",
        "--disable-console",
        "--remove-output"
      ],
      "problemMatcher": []
    },
    {
      "label": "Build Toolset",
      "type": "shell",
      "dependsOn": ["requirements.txt", "install_pyinstaller"],
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "PyInstaller",
        "--noconsole",
        "--onefile",
        "--clean",
        "--name=HolocronToolset",
        "--path=${workspaceFolder}${pathSeparator}toolset",
        "--icon=resources${pathSeparator}icons${pathSeparator}sith.ico",
        "toolset${pathSeparator}__main__.py"
      ],
      "problemMatcher": []
    },
    {
      "label": "Build KotorDiff",
      "type": "shell",
      "dependsOn": ["requirements.txt", "install_pyinstaller"],
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "PyInstaller",
        "--console",
        "--onefile",
        "--clean",
        "--name=kotordiff",
        "--path=${workspaceFolder}",
        "scripts${pathSeparator}kotordiff${pathSeparator}__main__.py"
      ],
      "problemMatcher": []
    },
    {
      "label": "Build GUI Creator",
      "type": "shell",
      "dependsOn": ["requirements.txt", "install_pyinstaller"],
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "PyInstaller",
        "--console",
        "--onefile",
        "--clean",
        "--name=gui_creator",
        "--path=${workspaceFolder}",
        "scripts${pathSeparator}guicreator${pathSeparator}__main__.py"
      ],
      "problemMatcher": []
    },
    {
      "label": "Build Model ASCII Compiler",
      "type": "shell",
      "dependsOn": ["requirements.txt", "install_pyinstaller"],
      "command": "${command:python.interpreterPath}",
      "args": [
        "-m",
        "PyInstaller",
        "--console",
        "--onefile",
        "--clean",
        "--name=mdl_decompile",
        "--path=${workspaceFolder}",
        "scripts${pathSeparator}mdl_decompile${pathSeparator}__main__.py"
      ],
      "problemMatcher": []
    }
  ]
}
