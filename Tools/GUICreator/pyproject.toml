[build-system]
requires = [
    "setuptools>=42",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name="GUIDuplicator"
description="A translator/font creator tool useful for patching/working with many files at once."
version="2.2.0"
requires-python = ">= 3.8"  # 64-bit, 3.7 might be compatible
dependencies = [
    #tsidna~=3.3  # TODO: can't be found on pip/pypi?
    "PyQt5~=5.15",
    "PyQt5-Qt5~=5.15",
    "PyQt5-sip~=12.10",
    "urllib3~=1.26",
    "watchdog>=2.1,<3.1",
    "Markdown>=3.3,<3.6",
    "jsmin~=3.0",
    "requests>=2.27,<2.32",
    "certifi==2021.10.8",
    #pykotor>=1.7  # Required, but due to limited granularity of this requirements.txt format we can't uncomment this on the repo.
    "pyperclip~=1.8",
    "setuptools>=68.2.2",
]
authors = [
  {name = "NickHugi"},
]
maintainers = [
  {name = "th3w1zard1", email = "halomastar@gmail.com"},
]
readme = {file = "README.md", content-type = "text/markdown"}
license = {text = "MIT License"}
keywords = ["kotor", "pyqt5", "holocron", "toolset", "pykotor"]

[project.urls]
Homepage = "https://github.com/NickHugi/PyKotor"
Documentation = "https://github.com/NickHugi/PyKotor/blob/master/README.md"
Repository = "https://github.com/NickHugi/PyKotor.git"
Issues = "https://github.com/NickHugi/PyKotor/issues"
#Changelog = "https://github.com/NickHugi/PyKotor/blob/master/CHANGELOG.md"

########################################################
## define only linter configurations below this point ##
########################################################

[tool.black]
line-length = 130
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.git
| \.hg
| \.github
| \.mypy_cache
| \.tox
| \.venv
| venv
| _build
| buck-out
| build
| __pycache__
| dist
| nuitka_dist
| \.history
| \.idea
| \.chat
| \.ruff_cache
| \.trunk
| .mdx
| .mdl
)/
'''

[tool.isort]
atomic = true
profile = "black"
line_length = 130
skip_gitignore = true

[tool.ruff]
target-version = "py38"
line-length = 130

select = ["ALL"]

ignore = [
    "ANN",
    "ANN101",   # Missing type annotation for {name} in method
    "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed in {name}
#    "E402",     # Module level import not at top of file
    "E501",     # line too long
    "FBT001",   # Boolean positional arg in function definition
    "FBT002",   # Boolean default value in function definition
    "D100",     # Missing docstring in public module
    "D101",     # Missing docstring in public class
    "D102",     # Missing docstring in public method
    "D103",     # Missing docstring in public function
    "D104",     # Missing docstring in public package
    "D105",     # Missing docstring in magic method
    "D107",     # Missing docstring in __init__
    "D205",     # 1 blank line required between summary line and description
    "D213",     # Multi-line docstring summary should start at the second line
#    "D400",     # First line should end with a period
    "D401",     # First line of docstring should be in imperative mood
#    "D403",     # First word of the first line should be capitalized: {} -> {}
#    "D404",     # First word of the docstring should not be "This"
    "D417",     # Missing argument description in the docstring for {definition}: {name}
    "N802",     # Function name `screenToWorld` should be lowercase
    "N806",     # Variable `jumpToOffset` in function should be lowercase
    "N815",     # Variable `var` in class scope should not be mixedCase
    # The following are currently violated by the codebase.
    "ARG002",   # Unused method argument: `method`
#    "FIX004",   # Line contains HACK, consider resolving the issue
#    "PD901",    # df is a bad variable name. Be kinder to your future self.
#    "PERF203",  # `try`-`except` within a loop incurs performance overhead
#    "PLR0913",  # Too many arguments to function call (N > 5)
#    "PLR2004",  # Magic value used in comparison, consider replacing X with a constant variable
#    "S101",     # Use of assert detected
#    "S314",     # Using `xml` to parse untrusted data is known to be vulnerable to XML attacks; use `defusedxml` equivalents
#    "S605",     # Starting a process with a shell, possible injection detected
    "SLF001",   # Private member accessed
#    "T201",     # `print` found
]
unfixable = ["N815", "F841", "ERA001"]

[tool.ruff.per-file-ignores]
"tests/*.py" = ["ALL"]
".github/*py" = ["INP001"]
"__init__.py" = ["I001", "F401"]
"globalsettings.py" = ["I001", "F401"]
"tools/HolocronToolset/toolset/*.py" = ["FBT003", "N802", "N803", "N806", "A001"]
"tools/HolocronToolset/toolset/uic/*.py" = ["ALL"]
"resources_rc.py" = ["ALL"]
".mdx" = ["ALL"]
".mdl" = ["ALL"]
"pykotor/resource/formats/ncs/compiler/*.py" = ["ALL"]

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.pyupgrade]
keep-runtime-typing = true

[tool.mccabe]
max-complexity = 25

[tool.style]
based_on_style = "pep8"
split_before_named_assigns = true
split_complex_comprehension = true
split_arguments_when_comma_terminated = true

[tool.pylintrc]
max-line-length = 130
